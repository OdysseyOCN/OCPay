<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stormfives.admin.wallet.dao.NeoCoinUserMapper" >
  <resultMap id="BaseResultMap" type="com.stormfives.admin.wallet.dao.entity.NeoCoinUser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="country_name" property="countryName" jdbcType="VARCHAR" />
    <result column="first_name" property="firstName" jdbcType="VARCHAR" />
    <result column="last_name" property="lastName" jdbcType="VARCHAR" />
    <result column="img_with_id" property="imgWithId" jdbcType="VARCHAR" />
    <result column="img_id" property="imgId" jdbcType="VARCHAR" />
    <result column="birth" property="birth" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="adress" property="adress" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="zip" property="zip" jdbcType="VARCHAR" />
    <result column="receive_address" property="receiveAddress" jdbcType="VARCHAR" />
    <result column="purchase" property="purchase" jdbcType="VARCHAR" />
    <result column="reg_ip" property="regIp" jdbcType="VARCHAR" />
    <result column="telegram_ID" property="telegramId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, email, password, country_name, first_name, last_name, img_with_id, img_id, 
    birth, phone, adress, region, zip, receive_address, purchase, reg_ip, telegram_ID, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from neo_coin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from neo_coin_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from neo_coin_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUserExample" >
    delete from neo_coin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUser" >
    insert into neo_coin_user (user_id, email, password, 
      country_name, first_name, last_name, 
      img_with_id, img_id, birth, 
      phone, adress, region, 
      zip, receive_address, purchase, 
      reg_ip, telegram_ID, create_time
      )
    values (#{userId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{countryName,jdbcType=VARCHAR}, #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, 
      #{imgWithId,jdbcType=VARCHAR}, #{imgId,jdbcType=VARCHAR}, #{birth,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, 
      #{zip,jdbcType=VARCHAR}, #{receiveAddress,jdbcType=VARCHAR}, #{purchase,jdbcType=VARCHAR}, 
      #{regIp,jdbcType=VARCHAR}, #{telegramId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUser" >
    insert into neo_coin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="countryName != null" >
        country_name,
      </if>
      <if test="firstName != null" >
        first_name,
      </if>
      <if test="lastName != null" >
        last_name,
      </if>
      <if test="imgWithId != null" >
        img_with_id,
      </if>
      <if test="imgId != null" >
        img_id,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="adress != null" >
        adress,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="zip != null" >
        zip,
      </if>
      <if test="receiveAddress != null" >
        receive_address,
      </if>
      <if test="purchase != null" >
        purchase,
      </if>
      <if test="regIp != null" >
        reg_ip,
      </if>
      <if test="telegramId != null" >
        telegram_ID,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null" >
        #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null" >
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="imgWithId != null" >
        #{imgWithId,jdbcType=VARCHAR},
      </if>
      <if test="imgId != null" >
        #{imgId,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        #{adress,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        #{zip,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="purchase != null" >
        #{purchase,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null" >
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="telegramId != null" >
        #{telegramId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUserExample" resultType="java.lang.Integer" >
    select count(*) from neo_coin_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update neo_coin_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.countryName != null" >
        country_name = #{record.countryName,jdbcType=VARCHAR},
      </if>
      <if test="record.firstName != null" >
        first_name = #{record.firstName,jdbcType=VARCHAR},
      </if>
      <if test="record.lastName != null" >
        last_name = #{record.lastName,jdbcType=VARCHAR},
      </if>
      <if test="record.imgWithId != null" >
        img_with_id = #{record.imgWithId,jdbcType=VARCHAR},
      </if>
      <if test="record.imgId != null" >
        img_id = #{record.imgId,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.adress != null" >
        adress = #{record.adress,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.zip != null" >
        zip = #{record.zip,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveAddress != null" >
        receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.purchase != null" >
        purchase = #{record.purchase,jdbcType=VARCHAR},
      </if>
      <if test="record.regIp != null" >
        reg_ip = #{record.regIp,jdbcType=VARCHAR},
      </if>
      <if test="record.telegramId != null" >
        telegram_ID = #{record.telegramId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update neo_coin_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      country_name = #{record.countryName,jdbcType=VARCHAR},
      first_name = #{record.firstName,jdbcType=VARCHAR},
      last_name = #{record.lastName,jdbcType=VARCHAR},
      img_with_id = #{record.imgWithId,jdbcType=VARCHAR},
      img_id = #{record.imgId,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      adress = #{record.adress,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      zip = #{record.zip,jdbcType=VARCHAR},
      receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      purchase = #{record.purchase,jdbcType=VARCHAR},
      reg_ip = #{record.regIp,jdbcType=VARCHAR},
      telegram_ID = #{record.telegramId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUser" >
    update neo_coin_user
    <set >
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="countryName != null" >
        country_name = #{countryName,jdbcType=VARCHAR},
      </if>
      <if test="firstName != null" >
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null" >
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="imgWithId != null" >
        img_with_id = #{imgWithId,jdbcType=VARCHAR},
      </if>
      <if test="imgId != null" >
        img_id = #{imgId,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="adress != null" >
        adress = #{adress,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="zip != null" >
        zip = #{zip,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null" >
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="purchase != null" >
        purchase = #{purchase,jdbcType=VARCHAR},
      </if>
      <if test="regIp != null" >
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="telegramId != null" >
        telegram_ID = #{telegramId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stormfives.admin.wallet.dao.entity.NeoCoinUser" >
    update neo_coin_user
    set email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      country_name = #{countryName,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      img_with_id = #{imgWithId,jdbcType=VARCHAR},
      img_id = #{imgId,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      zip = #{zip,jdbcType=VARCHAR},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      purchase = #{purchase,jdbcType=VARCHAR},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      telegram_ID = #{telegramId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>